Node textCompartment = ViewService.createNode(diagram, statechart,
                SemanticHints.STATECHART_TEXT, preferencesHint);
        setTextCompartmentLayoutConstraint(textCompartment);
    }

    private static void setStateViewLayoutConstraint(Node stateNode) {
        Bounds bounds = NotationFactory.eINSTANCE.createBounds();
        bounds.setX(40);
        bounds.setY(80);
        stateNode.setLayoutConstraint(bounds);
    }

    private static void setInitialStateViewLayoutConstraint(
            Node initialStateView) {
        Bounds bounds = NotationFactory.eINSTANCE.createBounds();
        bounds.setX(70);
        bounds.setY(20);
        initialStateView.setLayoutConstraint(bounds);
    }

    private static View getRegionCompartmentView(View regionView) {
        return (View) regionView.getChildren().get(1);
    }

    private static void setTextCompartmentLayoutConstraint(Node textCompartment) {
        Bounds bounds = NotationFactory.eINSTANCE.createBounds();
        bounds.setX(INITIAL_TEXT_COMPARTMENT_X);
        bounds.setY(INITIAL_TEXT_COMPARTMENT_Y);
        bounds.setHeight(INITIAL_TEXT_COMPARTMENT_HEIGHT);
        bounds.setWidth(INITIAL_TEXT_COMPARTMENT_WIDTH);
        textCompartment.setLayoutConstraint(bounds);
    }

    private static void setRegionViewLayoutConstraint(Node regionView) {
    Bounds bounds = NotationFactory.eINSTANCE.createBounds();
    bounds.setX(INITIAL_TEXT_COMPARTMENT_WIDTH + INITIAL_TEXT_COMPARTMENT_X
                + SPACING);
    bounds.setY(INITIAL_TEXT_COMPARTMENT_Y);
    bounds.setHeight(INITIAL_REGION_HEIGHT);
    bounds.setWidth(INITIAL_REGION_WIDTH);
    regionView.setLayoutConstraint(bounds);
    }
}
