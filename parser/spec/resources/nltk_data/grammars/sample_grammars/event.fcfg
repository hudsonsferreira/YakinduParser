## Natural Language Toolkit: event.fcfg
##
## Illustrating Davidson-style event semantics
## 
## Author: Ewan Klein <ewan@inf.ed.ac.uk> 
## URL: <http://nltk.sourceforge.net>
## For license information, see LICENSE.TXT
##
## $Id: event.cfg 4674 2007-06-14 08:55:32Z ehk $

% start S
############################
# Grammar Rules
#############################

S[SEM=<exists e.?subj(e,?vp)>] -> NP[NUM=?n,SEM=?subj] VP[NUM=?n,SEM=?vp]

NP[NUM=?n,SEM=<?det(?nom)> ] -> Det[NUM=?n,SEM=?det]  Nom[NUM=?n,SEM=?nom]
NP[LOC=?l,NUM=?n,SEM=?np] -> PropN[LOC=?l,NUM=?n,SEM=?np]

Nom[NUM=?n,SEM=?nom] -> N[NUM=?n,SEM=?nom]
Nom[NUM=?n,SEM=<?pp(?nom)>] -> N[NUM=?n,SEM=?nom] PP[SEM=?pp]

VP[NUM=?n,SEM=?v] -> IV[NUM=?n,SEM=?v]
VP[NUM=?n,SEM=<?v(?obj)>] -> TV[NUM=?n,SEM=?v] NP[SEM=?obj]
VP[NUM=?n,SEM=<?v(?obj,?pp)>] -> DTV[NUM=?n,SEM=?v] NP[SEM=?obj] PP[+to, SEM=?pp]

VP[NUM=?n,SEM=<?pp(?vp)>] -> VP[NUM=?n,SEM=?vp] PP[SEM=?pp]
VP[NUM=?n,SEM=<?adv(?vp)>] -> VP[NUM=?n,SEM=?vp] Adv[SEM=?adv]

PP[SEM=<?p(?np)>] -> P[LOC=?l,SEM=?p] NP[LOC=?l,SEM=?np]

#############################
# Lexical Rules
#############################

PropN[-LOC,NUM=sg,SEM=<\e R.R(e,angus)>] -> 'Angus'
PropN[-LOC,NUM=sg,SEM=<\e R.R(e,pat)>] -> 'Pat'
PropN[-LOC,NUM=sg,SEM=<\e R.R(e,irene)>] -> 'Irene'
PropN[-LOC,NUM=sg,SEM=<\e R.R(e,cyril)>] -> 'Cyril'
PropN[+LOC, NUM=sg,SEM=<\e R.R(e,stockbridge)>] -> 'Stockbridge'

NP[-LOC, NUM=sg, SEM=<\P.\x.P(x)>] -> 'who'  

Det[NUM=sg,SEM=<\P R e.all x.(P(x) -> R(e,x))>] -> 'every'
Det[NUM=pl,SEM=<\P R e.all x.(P(x) -> R(e,x))>] -> 'all'
Det[SEM=<\P R e.exists x.(P(x) & R(e,x))>] -> 'some'
Det[NUM=sg,SEM=<\P R e.exists x.(P(x) & R(e,x))>] -> 'a'

N[NUM=sg,SEM=<boy>] -> 'boy'
N[NUM=pl,SEM=<boy>] -> 'boys'
N[NUM=sg,SEM=<girl>] -> 'girl'
N[NUM=pl,SEM=<girl>] -> 'girls'
N[NUM=sg,SEM=<bone>] -> 'bone'
N[NUM=sg,SEM=<dog>] -> 'dog'

IV[NUM=sg,SEM=<\e x.(bark(e) & agent(e,x))>,TNS=pres] -> 'barks'
IV[NUM=pl,SEM=<\e x.(bark(e) & agent(e,x))>,TNS=pres] -> 'bark'
IV[NUM=sg,SEM=<\e x.(walk(e) & agent(e,x))>,TNS=pres] -> 'walks'
IV[NUM=pl,SEM=<\e x.( walk(e) & agent(e,x))>,TNS=pres] -> 'walk'
TV[NUM=sg,SEM=<\X y.X(\e x.(chase(e) & agent(e,y) & patient(e,x)))>,TNS=pres] -> 'chases'
TV[NUM=pl,SEM=<\X y.X(\e x.(chase(e) & agent(e,y) & patient(e,x)))>,TNS=pres] -> 'chase'
TV[NUM=sg,SEM=<\X y.X(\e x.(see(e) & agent(e,y) & patient(e,x)))>,TNS=pres] -> 'sees'
TV[NUM=pl,SEM=<\X y.X(\e x.(see(e) & agent(e,y) & patient(e,x)))>,TNS=pres] -> 'see'
DTV[NUM=sg,SEM=<\Y X x.X(\z.Y(\e y.(give(e) & agent(e,x) & theme(e,y) & recip(e,z))))>,TNS=pres] -> 'gives'
DTV[NUM=pl,SEM=<\Y X x.X(\z.Y(\e y.(give(e) & agent(e,x) & theme(e,y) & recip(e,z))))>,TNS=pres] -> 'give'

P[+LOC,SEM=<\X P e.X(\y.(P(e) & in(e,y)))>] -> 'in'
P[-LOC,SEM=<\X P e.X(\y.(P(e) & with(e,y)))>] -> 'with'
P[+to,SEM=<\X.X>] -> 'to'

Adv[SEM=<\R e x.(slow(e) & R(e,x))>] -> 'slowly'
Adv[SEM=<\R e x.(thoughtful(e) & R(e,x))>] -> 'thoughtfully'
